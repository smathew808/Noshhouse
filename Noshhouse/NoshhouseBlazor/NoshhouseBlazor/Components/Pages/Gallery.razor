@page "/gallery"

<h3>Gallery</h3>

<div class="container">
    <div class="column d-flex flex-column align-items-center justify-content-center">
        @foreach (var image in Images)
        {
            <div class="col-md-4 mb-4">
                <div class="card h-100">
                    @if (image.IsLoaded)
                    {
                        <img src="@image.Url" class="card-img-top" alt="..." style="max-height: 200px;">
                    }
                    else
                    {
                        <div class="card-body">
                            <Spinner Color="SpinnerColor.Primary" />
                        </div>
                    }
                </div>
            </div>
        }
    </div>
</div>

@code {
    private List<ImageModel> Images { get; set; }

    protected override async Task OnInitializedAsync()
    {
        // Initialize the image list with placeholders
        Images = new List<ImageModel>
        {
            new ImageModel { Url = "Images/1.jpg", IsLoaded = false },
            new ImageModel { Url = "Images/2.jpg", IsLoaded = false },
            new ImageModel { Url = "Images/3.jpg", IsLoaded = false },
            // Add more images as needed
        };
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await LoadImagesAsync();
        }
    }

    private async Task LoadImagesAsync()
    {
        // Simulate a delay for loading images
        await Task.Delay(2000);

        // Mark images as loaded
        foreach (var image in Images)
        {
            image.IsLoaded = true;
        }

        // Notify Blazor to re-render the component
        StateHasChanged();
    }

    private class ImageModel
    {
        public string Url { get; set; }
        public bool IsLoaded { get; set; }
    }
}